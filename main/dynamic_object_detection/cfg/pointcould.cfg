#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("ros_hz", int_t, 0, "Execution rate", 4, 0, 10)
gen.add("detect_range", double_t, 0, "Filtering range for the passthrough filter", 3.0, 0.0, 20.0)
gen.add("leafsize3d", double_t, 0, "Voxel size for VoxelGrid filter", 0.06, 0.05, 0.1)
gen.add("leafsize2d", double_t, 0, "Voxel size for VoxelGrid filter", 0.08, 0.05, 0.12)
gen.add("DBSCAN_eps", double_t, 0, "EPS parameter for DBSCAN clustering", 0.14, 0.05, 0.2)
gen.add("DBSCAN_minPts", int_t, 0, "MinPts parameter for DBSCAN clustering", 7, 2, 10)
gen.add("DBSCAN_eps2", double_t, 0, "EPS parameter for DBSCAN clustering", 0.1, 0.05, 0.2)
gen.add("DBSCAN_minPts2", int_t, 0, "MinPts parameter for DBSCAN clustering", 10, 2, 10)
gen.add("Statistical_MeanK", int_t, 0, " number of neighbors to be considered for averaging", 2, 1, 200)
gen.add("Statistical_Thresh", double_t, 0, "standard deviation multiplier", 1, 0.1, 10)
gen.add("Radius_MinNeighborsInRadius", int_t, 0, "Min Neighbors In Radius ", 3, 1, 8)
gen.add("Radius_RadiusSearch", double_t, 0, "Radius search range", 0.04, 0.01, 0.1)
gen.add("RGS_MAXClusterSize", int_t, 0, "standard deviation multiplier", 100, 10, 100)
gen.add("RGS_MinClusterSize", int_t, 0, "Min Neighbors In Radius ", 10, 10, 100)
gen.add("RGS_NumberOfNeighbours", int_t, 0, "Radius search range", 20, 3, 100)
gen.add("RGS_KSearch", int_t, 0, "Radius search range", 20, 3, 100)

exit(gen.generate("dynamic_object_detection", "dynamic_object_detection", "pointcloud"))